{"version":3,"file":"index.mjs","sources":["../../server/src/bootstrap.js","../../server/src/destroy.js","../../server/src/register.js","../../server/src/config/index.js","../../server/src/controllers/seo.js","../../server/src/controllers/settings.js","../../server/src/controllers/index.js","../../server/src/routes/seo.js","../../server/src/routes/settings.js","../../server/src/routes/index.js","../../server/src/services/seo.js","../../server/src/services/settings.js","../../server/src/services/index.js","../../server/src/index.js"],"sourcesContent":["const bootstrap = async ({ strapi }) => {\n  // Register permission actions.\n  const actions = [\n    {\n      section: 'plugins',\n      displayName: 'Access the plugin settings',\n      uid: 'read',\n      pluginName: 'seo',\n    },\n  ];\n  await strapi.admin.services.permission.actionProvider.registerMany(actions);\n};\n\nexport default bootstrap;\n","const destroy = () => {\n  // destroy phase\n};\n\nexport default destroy;\n","const register = () => {\n  // register phase\n};\n\nexport default register;\n","export default {\n  default: {},\n  validator() {},\n};\n","export const seoController = {\n  findSeoComponent(ctx) {\n    ctx.body = strapi.plugin('seo').service('seo').getSeoComponent();\n  },\n  findContentTypes(ctx) {\n    ctx.body = strapi.plugin('seo').service('seo').getContentTypes();\n  },\n  async createSeoComponent(ctx) {\n    strapi.reload.isWatching = false;\n\n    try {\n      const data = await strapi.plugin('seo').service('seo').createSeoComponent();\n      if (data) setImmediate(() => strapi.reload());\n      ctx.body = data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n","export const settingsController = ({ strapi }) => {\n  const settingsService = strapi.plugins['seo'].services.settings;\n\n  const getSettings = async (ctx) => {\n    try {\n      return settingsService.getSettings();\n    } catch (err) {\n      ctx.throw(500, err);\n    }\n  };\n  const setSettings = async (ctx) => {\n    const { body } = ctx.request;\n    try {\n      await settingsService.setSettings(body);\n      return settingsService.getSettings();\n    } catch (err) {\n      ctx.throw(500, err);\n    }\n  };\n  return {\n    getSettings,\n    setSettings,\n  };\n};\n","import { seoController } from './seo';\nimport { settingsController } from './settings';\n\nexport default {\n  seo: seoController,\n  settings: settingsController,\n};\n","export const seoRoutes = {\n  // accessible only from admin UI\n  type: 'admin',\n  routes: [\n    {\n      method: 'GET',\n      path: '/component',\n      handler: 'seo.findSeoComponent',\n      config: {\n        policies: [],\n      },\n    },\n    {\n      method: 'POST',\n      path: '/component',\n      handler: 'seo.createSeoComponent',\n      config: {\n        policies: [],\n      },\n    },\n    {\n      method: 'GET',\n      path: '/content-types',\n      handler: 'seo.findContentTypes',\n      config: {\n        policies: [],\n      },\n    },\n  ],\n};\n","export const settingsRoutes = {\n  // accessible only from admin UI\n  type: 'admin',\n  routes: [\n    {\n      method: 'GET',\n      path: '/settings',\n      handler: 'settings.getSettings',\n      config: { policies: [] },\n    },\n    {\n      method: 'POST',\n      path: '/settings',\n      handler: 'settings.setSettings',\n      config: { policies: [] },\n    },\n  ],\n};\n","import { seoRoutes } from './seo';\nimport { settingsRoutes } from './settings';\n\nexport default {\n  seo: seoRoutes,\n  settings: settingsRoutes,\n};\n","import _ from 'lodash';\n\nimport seoContent from '../components/seo.json';\nimport openGraph from '../components/open-graph.json';\n\nexport const seoService = ({ strapi }) => ({\n  getSeoComponent() {\n    const seoComponent = strapi.components['shared.seo'];\n    return seoComponent\n      ? { attributes: seoComponent.attributes, category: seoComponent.category }\n      : null;\n  },\n  getContentTypes() {\n    const contentTypes = strapi.contentTypes;\n    const keys = Object.keys(contentTypes);\n\n    const blackListedPlugins = ['upload', 'i18n', 'users-permissions'];\n\n    let collectionTypes = [];\n    let singleTypes = [];\n    let plugins = [];\n\n    keys.forEach((name) => {\n      const hasSharedSeoComponent = _.get(contentTypes[name], 'attributes.seo.component', null);\n\n      // Includes every api:: and content-manager-visible plugin content-types\n      if (\n        name.includes('api::') ||\n        (contentTypes[name].__schema__.pluginOptions &&\n          contentTypes[name].__schema__.pluginOptions['content-manager']?.visible === true)\n      ) {\n        const object = {\n          seo: hasSharedSeoComponent ? true : false,\n          uid: contentTypes[name]?.uid,\n          kind: contentTypes[name]?.kind,\n          globalId: contentTypes[name]?.globalId,\n          attributes: contentTypes[name]?.attributes,\n        };\n\n        if (name.includes('api::')) {\n          contentTypes[name]?.kind === 'collectionType'\n            ? collectionTypes.push(object)\n            : singleTypes.push(object);\n        } else {\n          blackListedPlugins.includes(name.replace('plugin::', '').split('.')[0])\n            ? null\n            : plugins.push(object);\n        }\n      }\n    });\n\n    return { collectionTypes, singleTypes, plugins } || null;\n  },\n  async createSeoComponent() {\n    const seoComponent = await this.getSeoComponent();\n\n    if (!seoComponent) {\n      if (openGraph && seoContent) {\n        try {\n          const res = await strapi\n            .plugin('content-type-builder')\n            .services.components.createComponent({\n              component: {\n                category: 'shared',\n                displayName: seoContent.info.displayName,\n                icon: seoContent.info.icon,\n                attributes: seoContent.attributes,\n              },\n              components: [\n                {\n                  tmpUID: 'shared.open-graph',\n                  category: 'shared',\n                  displayName: openGraph.info.displayName,\n                  icon: openGraph.info.icon,\n                  attributes: openGraph.attributes,\n                },\n              ],\n            });\n          return res;\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        return null;\n      }\n    }\n  },\n});\n","export const settingsService = ({ strapi }) => {\n  const getPluginStore = () => {\n    return strapi.store({\n      environment: '',\n      type: 'plugin',\n      name: 'seo',\n    });\n  };\n\n  // Create default settings\n  const createDefaultConfig = async () => {\n    const pluginStore = getPluginStore();\n\n    const newContentTypes = {};\n\n    const keys = Object.keys(strapi.contentTypes);\n    keys.map((key) => {\n      if (key.includes('api::')) {\n        newContentTypes[key] = {};\n        newContentTypes[key]['collectionName'] = key.split('.').pop();\n        newContentTypes[key]['seoChecks'] = {\n          metaTitle: true,\n          metaDescription: true,\n          metaRobots: true,\n          openGraph: true,\n          wordCount: true,\n          canonicalUrl: true,\n          keywordDensity: true,\n          structuredData: true,\n          alternativeText: true,\n          lastUpdatedAt: true,\n        };\n      }\n    });\n\n    const value = newContentTypes;\n\n    await pluginStore.set({ key: 'settings', value });\n    return pluginStore.get({ key: 'settings' });\n  };\n\n  const createConfigFromData = async (settings) => {\n    const value = settings;\n    const pluginStore = getPluginStore();\n    await pluginStore.set({ key: 'settings', value });\n    return pluginStore.get({ key: 'settings' });\n  };\n\n  const getSettings = async () => {\n    const pluginStore = getPluginStore();\n\n    let config = await pluginStore.get({ key: 'settings' });\n    if (!config) {\n      config = await createDefaultConfig();\n    }\n    return config;\n  };\n  const setSettings = async (data) => {\n    return createConfigFromData(data);\n  };\n  return {\n    getSettings,\n    setSettings,\n  };\n};\n","import { seoService } from './seo';\nimport { settingsService } from './settings';\n\nexport default {\n  seo: seoService,\n  settings: settingsService,\n};\n","/**\n * Application methods\n */\nimport bootstrap from './bootstrap';\nimport destroy from './destroy';\nimport register from './register';\n\n/**\n * Plugin server methods\n */\nimport config from './config';\nimport controllers from './controllers';\nimport routes from './routes';\nimport services from './services';\n\nexport default {\n  register,\n  bootstrap,\n  destroy,\n  config,\n  controllers,\n  routes,\n  services,\n};\n"],"names":["strapi","settingsService","config"],"mappings":"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"}